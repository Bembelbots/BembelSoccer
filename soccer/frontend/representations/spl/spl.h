#pragma once
#include "RoboCupGameControlData.h"

// if these version numbers change, this file may need to be updated as well,
// so these static_asserts ensure we don't forget ;)
static_assert(GAMECONTROLLER_STRUCT_VERSION == 15, "GAMECONTROLLER_STRUCT_VERSION has been changed.");
static_assert(GAMECONTROLLER_RETURN_STRUCT_VERSION == 4, "GAMECONTROLLER_RETURN_STRUCT_VERSION has been changed.");

// SPL-team colors
enum class TeamColor {
    BLUE = TEAM_BLUE,
    RED = TEAM_RED,
    YELLOW = TEAM_YELLOW,
    BLACK = TEAM_BLACK,
    WHITE = TEAM_WHITE,
    GREEN = TEAM_GREEN,
    ORANGE = TEAM_ORANGE,
    PURPLE = TEAM_PURPLE,
    BROWN = TEAM_BROWN,
    GRAY = TEAM_GRAY
};

// SPL-gamecontroller game states
enum class GameState {
    INITIAL = STATE_INITIAL,
    READY = STATE_READY,
    SET = STATE_SET,
    PLAYING = STATE_PLAYING,
    FINISHED = STATE_FINISHED
};

// SPL-gamecontroller secondary game states
enum class GamePhase {
    NORMAL = GAME_PHASE_NORMAL,
    PENALTYSHOOT = GAME_PHASE_PENALTYSHOOT,
    OVERTIME = GAME_PHASE_OVERTIME,
    TIMEOUT = GAME_PHASE_TIMEOUT
};

// SPL competition types
enum class CompetitionType {
    NORMAL = COMPETITION_TYPE_NORMAL,
    DYNAMIC_BALL_HANDLING = COMPETITION_TYPE_DYNAMIC_BALL_HANDLING
};

// SPL competition phase
enum class CompetitionPhase {
    ROUNDROBIN = COMPETITION_PHASE_ROUNDROBIN,
    PLAYOFF = COMPETITION_PHASE_PLAYOFF
};

// SPL set play
enum class SetPlay {
    NONE = SET_PLAY_NONE,
    GOAL_KICK = SET_PLAY_GOAL_KICK,
    PUSHING_FREE_KICK = SET_PLAY_PUSHING_FREE_KICK,
    CORNER_KICK = SET_PLAY_CORNER_KICK,
    KICK_IN = SET_PLAY_KICK_IN,
    PENALTY_KICK = SET_PLAY_PENALTY_KICK
};

// SPL penalties
enum class Penalty {
    NONE = PENALTY_NONE,
    ILLEGAL_BALL_CONTACT = PENALTY_SPL_ILLEGAL_BALL_CONTACT,
    PLAYER_PUSHING = PENALTY_SPL_PLAYER_PUSHING,
    ILLEGAL_MOTION_IN_SET = PENALTY_SPL_ILLEGAL_MOTION_IN_SET,
    INACTIVE_PLAYER = PENALTY_SPL_INACTIVE_PLAYER,
    ILLEGAL_POSITION = PENALTY_SPL_ILLEGAL_POSITION,
    LEAVING_THE_FIELD = PENALTY_SPL_LEAVING_THE_FIELD,
    REQUEST_FOR_PICKUP = PENALTY_SPL_REQUEST_FOR_PICKUP,
    LOCAL_GAME_STUCK = PENALTY_SPL_LOCAL_GAME_STUCK,
    ILLEGAL_POSITION_IN_SET = PENALTY_SPL_ILLEGAL_POSITION_IN_SET,
    PLAYER_STANCE = PENALTY_SPL_PLAYER_STANCE,
    SUBSTITUTE = PENALTY_SUBSTITUTE,
    MANUAL = PENALTY_MANUAL
};

// vim: set ts=4 sw=4 sts=4 expandtab:
